openapi: 3.0.0
info:
  title: Fudo Challenge
  version: 1.0.0
paths:
  /auth:
    post:
      summary: Authenticate and get a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - password
              properties:
                user:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "secret"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "abcdef123456"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /products:
    get:
      summary: Get list of products (requires authentication)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Laptop"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
    post:
      summary: Create a product asynchronously (requires authentication)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "Laptop"
        responses:
        "202":
          description: Product creation in progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product creation in progress"
        "400":
          description: Bad request (missing product name)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing product name"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
